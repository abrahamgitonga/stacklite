{"ast":null,"code":"var _jsxFileName = \"/home/trojann/Documents/Jitu-projects/stackTrial/stacktrial/Frontend/src/Components/Comment/Comments.js\",\n  _s = $RefreshSig$();\nimport Comment from \"./Comment\";\nimport CommentForm from \"./CommentForm\";\nimport BlueLinkButton from \"../Button/BlueButton\";\nimport styled from \"styled-components\";\nimport { useState } from 'react';\nimport axios from \"axios\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentsOuter = styled.div`\n  margin-left: 70px;\n  border-top: 1px solid rgba(255,255,255,.1);\n`;\n_c = CommentsOuter;\nfunction Comments(props) {\n  _s();\n  const [showCommentForm, setShowCommentForm] = useState(false);\n  const [currentComments, setCurrentComments] = useState([]);\n  function handleAddComment(content) {\n    axios.post('http://localhost:3030/posts', {\n      content,\n      postId: props.postId,\n      type: 'comment'\n    }, {\n      withCredentials: true\n    }).then(response => {\n      setCurrentComments(response.data);\n      setShowCommentForm(false);\n    });\n  }\n  const comments = currentComments.length === 0 ? props.initialComments : currentComments;\n  return /*#__PURE__*/_jsxDEV(CommentsOuter, {\n    children: [comments.map(questionComment => /*#__PURE__*/_jsxDEV(Comment, {\n      comment: questionComment\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)), showCommentForm && /*#__PURE__*/_jsxDEV(CommentForm, {\n      onAddCommentClick: content => handleAddComment(content)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), !showCommentForm && /*#__PURE__*/_jsxDEV(BlueLinkButton, {\n      onClick: () => setShowCommentForm(true),\n      style: {\n        padding: '10px 0'\n      },\n      children: \"Add a comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Comments, \"+5f1UOD3buvyGNTRXpFD9BZ3X6s=\");\n_c2 = Comments;\nComments.propTypes = {\n  initialComments: PropTypes.array.isRequired,\n  postId: PropTypes.number.isRequired\n};\nexport default Comments;\nvar _c, _c2;\n$RefreshReg$(_c, \"CommentsOuter\");\n$RefreshReg$(_c2, \"Comments\");","map":{"version":3,"names":["Comment","CommentForm","BlueLinkButton","styled","useState","axios","PropTypes","CommentsOuter","div","Comments","props","showCommentForm","setShowCommentForm","currentComments","setCurrentComments","handleAddComment","content","post","postId","type","withCredentials","then","response","data","comments","length","initialComments","map","questionComment","padding","propTypes","array","isRequired","number"],"sources":["/home/trojann/Documents/Jitu-projects/stackTrial/stacktrial/Frontend/src/Components/Comment/Comments.js"],"sourcesContent":["import Comment from \"./Comment\";\nimport CommentForm from \"./CommentForm\";\nimport BlueLinkButton from \"../Button/BlueButton\";\nimport styled from \"styled-components\";\nimport {useState} from 'react';\nimport axios from \"axios\";\nimport PropTypes from 'prop-types';\n\nconst CommentsOuter = styled.div`\n  margin-left: 70px;\n  border-top: 1px solid rgba(255,255,255,.1);\n`;\n\nfunction Comments(props) {\n  const [showCommentForm,setShowCommentForm] = useState(false);\n  const [currentComments,setCurrentComments] = useState([]);\n  function handleAddComment(content) {\n    axios.post('http://localhost:3030/posts', {content,postId:props.postId,type:'comment'}, {withCredentials:true})\n      .then(response => {\n        setCurrentComments(response.data);\n        setShowCommentForm(false);\n      });\n  }\n  const comments = currentComments.length===0 ? props.initialComments : currentComments;\n  return (\n    <CommentsOuter>\n      {comments.map(questionComment => (\n        <Comment comment={questionComment} />\n      ))}\n      {showCommentForm && (\n        <CommentForm onAddCommentClick={content => handleAddComment(content)} />\n      )}\n      {!showCommentForm && (\n        <BlueLinkButton\n          onClick={() => setShowCommentForm(true)}\n          style={{padding:'10px 0'}}>\n          Add a comment\n        </BlueLinkButton>\n      )}\n    </CommentsOuter>\n  );\n}\n\nComments.propTypes = {\n  initialComments: PropTypes.array.isRequired,\n  postId: PropTypes.number.isRequired,\n};\n\nexport default Comments;"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,cAAc,MAAM,sBAAsB;AACjD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAAQC,QAAQ,QAAO,OAAO;AAC9B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAC;AAEnC,MAAMC,aAAa,GAAGJ,MAAM,CAACK,GAAI;AACjC;AACA;AACA,CAAC;AAAC,KAHID,aAAa;AAKnB,SAASE,QAAQ,CAACC,KAAK,EAAE;EAAA;EACvB,MAAM,CAACC,eAAe,EAACC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC5D,MAAM,CAACS,eAAe,EAACC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACzD,SAASW,gBAAgB,CAACC,OAAO,EAAE;IACjCX,KAAK,CAACY,IAAI,CAAC,6BAA6B,EAAE;MAACD,OAAO;MAACE,MAAM,EAACR,KAAK,CAACQ,MAAM;MAACC,IAAI,EAAC;IAAS,CAAC,EAAE;MAACC,eAAe,EAAC;IAAI,CAAC,CAAC,CAC5GC,IAAI,CAACC,QAAQ,IAAI;MAChBR,kBAAkB,CAACQ,QAAQ,CAACC,IAAI,CAAC;MACjCX,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC,CAAC;EACN;EACA,MAAMY,QAAQ,GAAGX,eAAe,CAACY,MAAM,KAAG,CAAC,GAAGf,KAAK,CAACgB,eAAe,GAAGb,eAAe;EACrF,oBACE,QAAC,aAAa;IAAA,WACXW,QAAQ,CAACG,GAAG,CAACC,eAAe,iBAC3B,QAAC,OAAO;MAAC,OAAO,EAAEA;IAAgB;MAAA;MAAA;MAAA;IAAA,QACnC,CAAC,EACDjB,eAAe,iBACd,QAAC,WAAW;MAAC,iBAAiB,EAAEK,OAAO,IAAID,gBAAgB,CAACC,OAAO;IAAE;MAAA;MAAA;MAAA;IAAA,QACtE,EACA,CAACL,eAAe,iBACf,QAAC,cAAc;MACb,OAAO,EAAE,MAAMC,kBAAkB,CAAC,IAAI,CAAE;MACxC,KAAK,EAAE;QAACiB,OAAO,EAAC;MAAQ,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAG7B;EAAA;IAAA;IAAA;IAAA;EAAA,QACa;AAEpB;AAAC,GA5BQpB,QAAQ;AAAA,MAARA,QAAQ;AA8BjBA,QAAQ,CAACqB,SAAS,GAAG;EACnBJ,eAAe,EAAEpB,SAAS,CAACyB,KAAK,CAACC,UAAU;EAC3Cd,MAAM,EAAEZ,SAAS,CAAC2B,MAAM,CAACD;AAC3B,CAAC;AAED,eAAevB,QAAQ;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}